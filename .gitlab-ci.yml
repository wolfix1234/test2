stages:
  - build
  - docker
  - deploy

variables:
  APP_NAME: nextjs-app
  REGISTRY_URL: registry.musictomak.shop
  DOCKER_IMAGE: $REGISTRY_URL/root/test2
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA
  K8S_NAMESPACE: production
  K8S_DEPLOYMENT: $APP_NAME
  K8S_CONTAINER: $APP_NAME

  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375/

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .next/cache/
  policy: pull-push


# 1. Build Next.js app
build:
  stage: build
  image: node:18-alpine
  script:
    - npm ci --prefer-offline --audit=false
    - npm run build
  artifacts:
    paths:
      - .next/
      - public/
      - package.json
      - package-lock.json
    expire_in: 1h
  only:
    - main
  tags:
    - docker
# 2. Build & Push Docker Image
docker-build:
  stage: docker
  image: docker:24
  services:
    - docker:24-dind
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $REGISTRY_URL -u "$CI_REGISTRY_USER" --password-stdin
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  only:
    - main
  tags:
    - docker   # make sure this matches your runner tag

# 3. Deploy to Kubernetes (first deploy + updates)
deploy:
  stage: deploy
  script:
    - echo "=== DEPLOY TO K8S ==="
    - export KUBECONFIG=/home/gitlab-runner/.kube/config
    # ensure namespace exists
    - kubectl get ns production || kubectl create ns production
    # ensure registry secret exists (fixed syntax)
    - |
      kubectl get secret regcred -n production || \
      kubectl create secret docker-registry regcred \
        --docker-server=registry.musictomak.shop \
        --docker-username=$CI_REGISTRY_USER \
        --docker-password=$CI_REGISTRY_PASSWORD \
        -n production
    # first deploy if deployment does not exist
    - |
      if ! kubectl get deployment/nextjs-app -n production; then
        kubectl apply -f k8s/manifest.yaml
      fi
    # update image for rolling update
    - kubectl set image deployment/nextjs-app nextjs-app=$DOCKER_IMAGE:$DOCKER_TAG -n production
    - kubectl rollout status deployment/nextjs-app -n production --timeout=300s
    - kubectl get pods -n production -l app=nextjs-app
  only:
    - main
  tags:
    - shell




