stages:
  - build
  # - test  # Commented out for development - will enable later
  - build-docker
  - deploy

variables:
  # Docker configuration
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE # Uses GitLab's built-in variable
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA
  
  # Kubernetes configuration - SET THESE IN CI/CD VARIABLES
  K8S_NAMESPACE: mamad
  K8S_DEPLOYMENT: nextjs-app
  K8S_CONTAINER: nextjs-app

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .next/cache/

build:nextjs:
  stage: build
  image: node:18-alpine
  script:
    - npm ci
    - npm run build
  artifacts:
    paths:
      - .next/
      - public/
    expire_in: 1 week

# test:application:
#   stage: test
#   image: node:18-alpine
#   script:
#     - npm ci
#     - npm run test
#   needs: ["build:nextjs"]

build:docker:
  stage: build-docker
  image: docker:24
  services:
    - docker:24-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  only:
    - main
  # needs: ["test:application"]  # Removed dependency on test
  needs: ["build:nextjs"]  # Directly depends on build instead

deploy:production:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - |
      # Update Kubernetes deployment
      kubectl set image deployment/$K8S_DEPLOYMENT $K8S_CONTAINER=$DOCKER_IMAGE:$DOCKER_TAG -n $K8S_NAMESPACE
      
      # Wait for rollout to complete
      kubectl rollout status deployment/$K8S_DEPLOYMENT -n $K8S_NAMESPACE --timeout=300s
      
      # Verify deployment
      kubectl get pods -n $K8S_NAMESPACE -l app=$K8S_DEPLOYMENT
  only:
    - main
  needs: ["build:docker"]