stages:
  - build
  - docker
  - deploy

variables:
  # App & Kubernetes
  APP_NAME: nextjs-app
  K8S_NAMESPACE: mamad
  K8S_DEPLOYMENT: $APP_NAME
  K8S_CONTAINER: $APP_NAME

  # Docker registry
  REGISTRY_URL: registry.musictomak.shop
  DOCKER_IMAGE: $REGISTRY_URL/root/test2
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA

  # DinD setup
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375/

# Cache for faster builds
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .next/cache/
  policy: pull-push

# 1. Build Next.js app
build:
  stage: build
  image: node:18-alpine
  script:
    - npm ci --prefer-offline --audit=false
    - npm run build
  artifacts:
    paths:
      - .next/
      - public/
      - package.json
      - package-lock.json
    expire_in: 1h
  only:
    - main
    - staging
    - tags

# 2. Build & Push Docker Image
docker-build:
  stage: docker
  image: docker:24
  services:
    - docker:24-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375/
  script:
    - echo "=== DOCKER LOGIN ==="
    # Login to custom registry using PAT or deploy token
    - echo "$CI_REGISTRY_PASSWORD" | docker login $REGISTRY_URL -u "$CI_REGISTRY_USER" --password-stdin
    - echo "=== DOCKER BUILD ==="
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG -t $DOCKER_IMAGE:latest .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
    - docker push $DOCKER_IMAGE:latest
  only:
    - main

# 3. Deploy to Kubernetes
deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - echo "=== DEPLOY TO K8S ==="
    - echo "$KUBECONFIG_DATA" | base64 -d > kubeconfig
    - export KUBECONFIG=$PWD/kubeconfig
    - kubectl set image deployment/$K8S_DEPLOYMENT $K8S_CONTAINER=$DOCKER_IMAGE:$DOCKER_TAG -n $K8S_NAMESPACE
    - kubectl rollout status deployment/$K8S_DEPLOYMENT -n $K8S_NAMESPACE --timeout=300s
    - kubectl get pods -n $K8S_NAMESPACE -l app=$K8S_DEPLOYMENT
  only:
    - main
